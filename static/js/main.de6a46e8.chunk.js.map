{"version":3,"sources":["createProject.js","getAllTasks.js","components/Header.js","components/ProjectItem.js","components/Projects.js","components/TaskItem.js","components/Tasks.js","projectFactory.js","components/ProjectModal.js","userProjects.js","setLocalStorage.js","components/EditProjectModal.js","App.js","index.js"],"names":["openModal","document","querySelector","classList","add","getTasks","projectArray","allTasks","i","length","tasks","map","task","push","Header","props","onClick","displayAll","todos","ProjectItem","testFunc","e","stopPropagation","setEdit","target","parentElement","id","className","this","changeProject","title","icon","faEdit","Component","Projects","projectsComponents","todo","key","description","priority","class","createProject","TaskItem","type","checked","onChange","style","color","fontStyle","textDecoration","text","faTrashAlt","removeTask","currentTarget","Tasks","submitTask","preventDefault","taskToAdd","newtask","Date","now","value","completed","addTask","reset","submitDescription","newdescription","addDescription","check","taskId","checkTask","deleteTask","removeMultipleTasks","forEach","removeProject","currentProject","deleteProject","taskComponents","current","incompleteTasks","filter","completeTasks","dueDate","name","onSubmit","placeholder","projectFactory","ProjectModal","closeModal","remove","forms","submitProject","project","date","newProject","addProject","required","disabled","userProject","setLocalStorage","obj","localStorage","setItem","JSON","stringify","EditProjectModal","editProject","handleChange","changeEdit","edit","App","setState","prevState","updatedProject","tasksAll","selectedTab","state","find","index","Number","updatedCurrent","item","deletedTask","taskIndex","indexOf","splice","foundTask","updatedTodos","deletedProject","newEdit","newTodos","match","bind","savedProjects","parse","getItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.de6a46e8.chunk.js","sourcesContent":["function openModal() {\n    let modal = document.querySelector(\".modal-container\");\n    modal.classList.add('active')\n}\n\nexport default openModal\n\n","function getTasks(projectArray) {\n    let allTasks = []\n    for (let i = 0; i < projectArray.length; i++) {   \n        projectArray[i].tasks.map(task => allTasks.push(task))\n    }\n    return allTasks\n}\n\nexport default getTasks","import React from 'react';\nimport openModal from './../createProject'\nimport getTasks from '../getAllTasks';\n\nconst Header = (props) => {\n    return(\n        <header>\n            <h1>ToDo App</h1>\n            <button onClick={openModal}>Add Project</button>\n            <button onClick={() => props.displayAll(getTasks(props.todos))}>All Tasks</button>\n        </header>\n    )\n}\n\nexport default Header ","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProjectItem extends Component {\n\n    testFunc = (e) => {\n        e.stopPropagation()\n        const modal = document.querySelector(\"#edit-project\")\n        modal.classList.add(\"active\")\n        this.props.setEdit(e.target.parentElement.id)\n    }\n\n    render() {\n        return(\n            <div className=\"project-item\">\n                <p onClick={this.props.changeProject} id={this.props.id}>{this.props.title} <span className=\"svg-wrapper\" onClick={this.testFunc}><FontAwesomeIcon icon={faEdit}/></span></p>\n            </div>\n        )\n    }   \n}\n\nexport default ProjectItem","import React, { Component } from 'react'\nimport ProjectItem from './ProjectItem'\nimport createProject from './../createProject'\n\nclass Projects extends Component {\n    \n\n    render() {  \n        const projectsComponents = this.props.todos.map(todo =>\n            <ProjectItem \n                key={todo.id}\n                id={todo.id}\n                title={todo.title}\n                description={todo.description}\n                priority={todo.priority}\n                tasks={todo.tasks}\n                changeProject={this.props.changeProject}\n                setEdit = {this.props.setEdit}\n            />\n        )\n\n        return(\n            <div className=\"projects\">\n                <h1>Projects<span class=\"mobile-project-add\"><button onClick={this.createProject}>Add Project</button></span></h1>\n                \n                <div class=\"projects-container\">\n                 {projectsComponents}\n            \n                    <button onClick={createProject}>Add Project</button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default Projects","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nclass TaskItem extends Component {\n  render() {\n    const completedStyle = {\n      color: '#cdcdcd',\n      fontStyle: 'italic',\n      textDecoration: 'line-through'\n    }\n    \n    return (\n      <div className=\"task-item\">\n        <input \n          type=\"checkbox\" \n          checked={this.props.checked}\n          onChange={() => { this.props.onChange(this.props.id) }}\n        ></input>\n        <ul>\n          <li style={this.props.checked ? completedStyle : null } id={this.props.id} >\n            {this.props.text} \n            <FontAwesomeIcon\n              icon={faTrashAlt} \n              onClick={(e)=> this.props.removeTask(e.currentTarget.parentElement.id)}/>\n          </li>\n        </ul>\n      </div>\n      \n    );\n  }\n}\n\nexport default TaskItem;\n\n","import React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { faGrinTongueSquint } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Tasks extends Component {\n  submitTask = e => {\n    e.preventDefault();\n    const { newtask } = e.target;\n    let taskToAdd = {};\n    taskToAdd = {\n      id: Date.now(),\n      title: newtask.value,\n      completed: false\n    };\n    this.props.addTask(taskToAdd);\n    e.target.reset();\n  };\n\n  submitDescription = e => {\n    e.preventDefault();\n    const { newdescription } = e.target;\n    this.props.addDescription(newdescription.value);\n  };\n\n  check = taskId => {\n    this.props.checkTask(taskId);\n  };\n\n  removeTask = taskId => {\n    this.props.deleteTask(taskId);\n  };\n\n  removeMultipleTasks = tasks => {\n    tasks.forEach(task => {\n      this.props.deleteTask(task.id);\n    });\n  };\n\n  removeProject = currentProject => {\n    this.props.deleteProject(currentProject);\n  };\n\n  render() {\n    const taskComponents = this.props.current.tasks.map(task => (\n      <TaskItem\n        text={task.title}\n        id={task.id}\n        checked={task.completed}\n        onChange={this.check}\n        removeTask={this.removeTask}\n      />\n    ));\n\n    const incompleteTasks = this.props.current.tasks.filter(\n      task => task.completed === false\n    );\n    const completeTasks = this.props.current.tasks.filter(\n      task => task.completed === true\n    );\n\n    return (\n      <div className=\"tasks\">\n        <h1>\n          {this.props.current.title} {this.props.current.priority}\n          <span class=\"date\">\n            {this.props.current.dueDate\n              ? \"Due: \" + this.props.current.dueDate\n              : null}\n            <div>{incompleteTasks.length} Tasks remaining</div>\n          </span>\n        </h1>\n\n        <h3>\n          {this.props.current.description ? (\n            this.props.current.description\n          ) : (\n            <form name=\"add-description\" onSubmit={this.submitDescription}>\n              <input\n                type=\"text\"\n                placeholder=\"Add a description\"\n                name=\"newdescription\"\n              ></input>\n            </form>\n          )}\n        </h3>\n\n        {taskComponents}\n\n        {this.props.current.title === \"All Tasks\" ? (null) : (\n            <form className=\"new-task\" onSubmit={this.submitTask} name=\"add-task\">\n              <label>\n                +<input type=\"text\" placeholder=\" New Task\" name=\"newtask\"></input>\n              </label>\n            </form>\n            \n        )}\n\n      {this.props.current.title === \"All Tasks\" ? (null) :\n        (<div className=\"btns\">\n              <button onClick={() => this.removeProject(this.props.current.id)}>\n                Delete Project\n              </button>\n              <button onClick={() => this.removeMultipleTasks(completeTasks)}>\n                Remove Completed Tasks\n              </button>\n        </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Tasks;\n","const projectFactory = (id, title, description, dueDate, priority, tasks) => {\n    return { id, title, description, dueDate, priority, tasks}\n}\n\n\nexport default projectFactory;\n","import React, { Component } from \"react\";\nimport projectFactory from \"./../projectFactory\";\n\nclass ProjectModal extends Component { \n  closeModal = () => {\n    const modal = document.querySelector(\".modal-container\");\n    modal.classList.remove(\"active\");\n    document.forms[\"create-project\"].reset();\n  };\n\n  submitProject = (e) => {\n    e.preventDefault();\n\n    const { project, description, date, priority } = e.target\n    const id = Date.now()\n    const newProject = projectFactory(id, project.value, description.value, date.value, priority.value, [])\n    this.props.addProject(newProject)\n\n    this.closeModal()\n};\n\n  render() {\n    return (\n      <div className=\"modal-container\">\n        <div className=\"modal\">\n          <span onClick={this.closeModal}>[X]</span>\n          <h1>New Project</h1>\n          <form name=\"create-project\" className=\"create-project\" onSubmit={this.submitProject}>\n            <input type=\"text\" placeholder=\"Project\" name=\"project\" required></input>\n            <input type=\"text\" placeholder=\"Description\" name=\"description\"></input>\n            <input type=\"date\" name=\"date\"></input>\n            <select name=\"priority\">\n              <option disabled>Priority</option>\n              <option>&#10030;</option>\n              <option>&#10030; &#10030;</option>\n              <option>&#10030; &#10030; &#10030;</option>\n            </select>\n            <button type=\"submit\">\n              Create Project\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectModal;\n","import Projects from \"./components/Projects\"\n\nlet userProject = [\n    {\n        id: 1575787976909,\n        title: \"Vietnam Trip\",\n        description: \"Plan 2020 trip\",\n        dueDate: \"2020-04-01\",\n        priority: \"✮ ✮ ✮\",\n        tasks: [\n            {\n                id: 1,\n                title: \"Research tourist destinations\",\n                completed: false,\n            },\n            {\n                id: 2,\n                title: \"Decide which places to visit\",\n                completed: false\n            },\n            {\n                id: 3,\n                title: \"Book plane tickets\",\n                completed: false\n            }\n        ]\n    }, {\n        id: 1575787976902,\n        title: \"Van Conversion\",\n        description: \"Transform 2004 Sprinter into tiny home on wheels\",\n        dueDate: \"2020-04-01\",\n        priority: \"✮ ✮ ✮\",\n        tasks: [\n            {\n                id: 5,\n                title: \"Body work\",\n                completed: false\n            },\n            {\n                id: 6,\n                title: \"Insulation\",\n                completed: false\n            },\n            {\n                id: 7,\n                title: \"Flooring\",\n                completed: false\n            }\n        ]\n    },\n    \n]\n\nexport default userProject\n\n\n\n","function setLocalStorage(obj) {\n    localStorage.setItem('savedProjects', JSON.stringify(obj))\n}\n\nexport default setLocalStorage","import React, { Component } from 'react';\n\nclass EditProjectModal extends Component {\n    closeModal = () => {\n        const modal = document.querySelector(\"#edit-project\");\n        modal.classList.remove(\"active\");\n    };\n\n    submitProject = (e) => {\n      e.preventDefault();\n  \n      const { title, description, date, priority } = e.target\n\n      this.props.editProject(title.value, description.value, date.value, priority.value)\n  \n      this.closeModal()\n  };\n\n  handleChange = (e) => {\n    this.props.changeEdit(e.target.value, e.target.name)\n  }\n\n    render() {\n        return(\n            <div className=\"modal-container\" id=\"edit-project\">\n            <div className=\"modal\">\n              <span onClick={this.closeModal}>[X]</span>\n              <h1>Edit Project</h1>\n              <form name=\"edit-project\" className=\"edit-project\" onSubmit={this.submitProject}>\n                <input type=\"text\" value={this.props.edit.title} name=\"title\" onChange={this.handleChange}></input>\n                <input type=\"text\" value={this.props.edit.description} name=\"description\" onChange={this.handleChange}></input>\n                <input type=\"date\" name=\"date\"></input>\n                <select name=\"priority\">\n                  <option disabled>Priority</option>\n                  <option>&#10030;</option>\n                  <option>&#10030; &#10030;</option>\n                  <option>&#10030; &#10030; &#10030;</option>\n                </select>\n                <button type=\"submit\">\n                    Save Changes\n                </button>\n              </form>\n            </div>\n          </div>\n        )\n\n    }\n    \n}\n\nexport default EditProjectModal","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Projects from './components/Projects'\nimport Tasks from './components/Tasks'\nimport ProjectModal from './components/ProjectModal';\nimport userProject from './userProjects'\nimport setLocalStorage from './setLocalStorage'\nimport EditProjectModal from './components/EditProjectModal';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n        todos: userProject,\n        current: userProject[0],\n        edit: []\n    }\n    this.setEdit = this.setEdit.bind(this)\n  }\n\n  componentDidMount() {\n    const savedProjects = JSON.parse(localStorage.getItem('savedProjects'))\n    if(savedProjects) {\n      this.setState({\n        todos: savedProjects,\n        current: savedProjects[0]\n      })\n    } else {\n      setLocalStorage(userProject)\n      this.setState({\n        todos: userProject,\n        current: userProject[0]\n      })\n    }\n  }\n\n  addProject = (newProject) => {\n    this.setState(prevState => {\n      const updatedProject = prevState.todos\n      updatedProject.push(newProject)\n      setLocalStorage(updatedProject)\n      return {\n        todos: updatedProject,\n        current: updatedProject[updatedProject.length - 1]\n      }\n    })\n  }\n\n  allTasks = (tasksAll) => {\n    this.setState( prevState => {\n      const newCurrent = \n            {\n              id: 19,\n              title: \"All Tasks\",\n              description: \"combined tasks\",\n              dueDate: \"\",\n              priority: \"✮ ✮ ✮\",\n              tasks: tasksAll\n            }\n      return {\n        current: newCurrent\n      }\n    })\n  }\n\n  changeProject = (e) => { \n      let selectedTab = this.state.todos.find(index => Number(index.id) === Number(e.target.id))\n      this.setState({\n        current: selectedTab\n      })\n  }\n\n  addDescription = (description) => {\n    this.setState(prevState => {\n      const updatedCurrent = prevState.current\n      updatedCurrent.description = description\n      return {\n        todos: prevState.todos,\n        current: updatedCurrent\n      }\n    })\n  }\n\n  addTask = (item) => {\n    this.setState(prevState => {\n      const updatedCurrent = {...prevState.current}\n      updatedCurrent.tasks.push(item)\n      setLocalStorage(prevState.todos)\n      return {\n        todos: prevState.todos,\n        current: updatedCurrent\n      }\n    })\n  }\n\n  deleteTask = (item) => {\n    this.setState(prevState => {\n      const updatedCurrent = {...prevState.current}\n      \n      const updatedTodos = [...prevState.todos]\n      const deletedTask = updatedCurrent.tasks.find(task => Number(task.id) === Number(item))\n      const taskIndex = updatedCurrent.tasks.indexOf(deletedTask)\n\n\n      updatedCurrent.tasks.splice(taskIndex, 1)\n      \n      setLocalStorage(prevState.todos)\n      return {\n        todos: prevState.todos,\n        current: updatedCurrent\n      }\n    })\n  }\n \n  checkTask = (task) => {\n    this.setState(prevState => {\n      const updateCompleted = prevState.current.tasks\n      const foundTask = updateCompleted.find(item => Number(item.id) === Number(task))\n      foundTask.completed = !foundTask.completed\n      setLocalStorage(prevState.todos)\n      return {\n        todos: prevState.todos\n      }\n    })\n  }\n\n  deleteProject = (project) => {\n    this.setState(prevState => {\n      const updatedTodos = [...prevState.todos]\n      const deletedProject = updatedTodos.find(todo => Number(todo.id) === Number(project))\n      const index = updatedTodos.indexOf(deletedProject)\n      updatedTodos.splice(index, 1)\n      setLocalStorage(prevState.todos)\n      if(updatedTodos.length < 1) {\n        return {\n          todos: [],\n          current: []\n        }\n      } else {\n        return {\n          todos: updatedTodos,\n          current: updatedTodos[index - 1]\n        }\n      }\n    })\n  }\n\n  setEdit = (id) => {\n    this.setState(prevState => {\n      const newArray = [...prevState.todos]\n      const match = newArray.find(todo => Number(todo.id) === Number(id))\n      return {\n        edit: match\n      }\n    })\n  }\n\n  changeEdit = (value, name) => {\n    this.setState(prevState => {\n      let newEdit = {...prevState.edit}\n      newEdit[name] = value\n      return {\n        edit: newEdit\n      }\n    })\n  }\n\n  editProject = (title, description, dueDate, priority) => {\n    this.setState(prevState => {\n      const newTodos = [...prevState.todos]\n      const newEdit = {...prevState.edit}\n      let match = newTodos.find(todo => Number(todo.id) === newEdit.id)\n      let index = newTodos.indexOf(match)\n      match.title = title\n      match.description = description\n      match.dueDate = dueDate\n      match.priority = priority\n      newTodos[index] = match\n      return {\n        todos: newTodos,\n        current: newTodos[index]\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header \n          todos={this.state.todos}\n          displayAll={this.allTasks}\n        />\n        <ProjectModal \n          addProject={this.addProject}\n          todos={this.state.todos} \n          current={this.state.current} \n        />\n  \n        <Projects \n          todos={this.state.todos} \n          current={this.state.current} \n          changeProject={this.changeProject}\n          setEdit={this.setEdit}\n        />\n        <EditProjectModal \n          edit={this.state.edit}\n          changeEdit={this.changeEdit}\n          editProject={this.editProject}\n        />\n\n        {this.state.todos.length > 0 ? \n          <Tasks \n          todos={this.state.todos} \n          current={this.state.current}\n          addTask={this.addTask}\n          checkTask={this.checkTask}\n          deleteTask={this.deleteTask}\n          deleteProject={this.deleteProject}\n          addDescription={this.addDescription}\n        /> : null\n        }\n        \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport EditProjectModal from './components/EditProjectModal'\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n\n"],"sourceRoot":""}